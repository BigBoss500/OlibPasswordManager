<Window x:Class="OlibKey.MainWindow"
        x:Name="mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:OlibKey.ModelViews"
        mc:Ignorable="d"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        Closing="Window_Closing"
        WindowStartupLocation="CenterScreen"
        KeyDown="Window_KeyDown"
        Background="Transparent" AllowsTransparency="True"
        WindowStyle="None"
        Title="OlibKey" Height="450" Width="800" MinWidth="600" MinHeight="350" >
    <Window.DataContext>
        <viewmodels:MainViewModel x:Name="Model"/>
    </Window.DataContext>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard Timeline.DesiredFrameRate="60" FillBehavior="Stop">
                    <DoubleAnimation Storyboard.TargetName="ScaleWindow" Storyboard.TargetProperty="ScaleX" From="0.8" To="1" DecelerationRatio="1" Duration="0:0:0.3"/>
                    <DoubleAnimation Storyboard.TargetName="ScaleWindow" Storyboard.TargetProperty="ScaleY" From="0.8" To="1" DecelerationRatio="1"  Duration="0:0:0.3"/>
                    <DoubleAnimation Storyboard.TargetName="mainWindow" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>

    <Grid RenderTransformOrigin="0.5,0.5" Background="#01000000">
        <Grid.RenderTransform>
            <TransformGroup>
                <ScaleTransform x:Name="ScaleWindow" ScaleY="1" ScaleX="1"/>
            </TransformGroup>
        </Grid.RenderTransform>
        <Border Background="#FF5A0F26" CornerRadius="5" BorderBrush="{DynamicResource BorderColorWindow}"
                BorderThickness="1" Margin="4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Background="{DynamicResource BackgroundWindow}"
                        BorderBrush="{DynamicResource BorderColorWindow}" BorderThickness="0,0,0,1"
                        CornerRadius="4.5,4.5,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{DynamicResource OlibKeyLogoHeightDrawingImage}" Height="16"
                                       Margin="10,5,2,5" />
                                <Image Margin="0,5,5,2" Width="50" Source="{DynamicResource OlibKeyTextImage}"/>
                            </StackPanel>
                        </Grid>
                        <Menu Grid.Column="1" VerticalAlignment="Center" Background="Transparent" HorizontalAlignment="Left">
                            <MenuItem Header="{DynamicResource File}">
                                <MenuItem Header="{DynamicResource CreateBase}" Command="{Binding NewPasswordStorage}" />
                                <MenuItem Header="{DynamicResource OpenBase}" Command="{Binding OpenStorage}"
                                          InputGestureText="Ctrl + O" />
                                <MenuItem Header="{DynamicResource SaveBase}" Command="{Binding SaveStorage}"
                                          InputGestureText="Ctrl + S"
                                          IsEnabled="{Binding IsUnlockStorage, UpdateSourceTrigger=PropertyChanged}" />
                                <MenuItem Header="{DynamicResource LockStorage}" Command="{Binding BlockingStorage}"
                                          IsEnabled="{Binding IsUnlockStorage, UpdateSourceTrigger=PropertyChanged}" />
                                <MenuItem Header="{DynamicResource UnlockStorage}"
                                          Command="{Binding UnblockingStorage}"
                                          IsEnabled="{Binding IsLockStorage, UpdateSourceTrigger=PropertyChanged}" />
                                <Separator />
                                <MenuItem Header="{DynamicResource AddLogin}" InputGestureText="Ctrl + N"
                                          Command="{Binding NewCreatePassword}"
                                          IsEnabled="{Binding IsUnlockStorage, UpdateSourceTrigger=PropertyChanged}" />
                                <Separator />
                                <MenuItem Header="{DynamicResource Settings}" Command="{Binding SettingsWindowCommand}" />
                                <MenuItem Header="{DynamicResource ExitFrom}" Command="{Binding ExitProgram}"
                                          InputGestureText="Alt + F4" />
                            </MenuItem>
                            <MenuItem Header="{DynamicResource Tools}">
                                <MenuItem Header="{DynamicResource PasswordGenerator}" InputGestureText="Ctrl + G"
                                          Command="{Binding PasswordGenerator}" />
                                <MenuItem Header="{DynamicResource ChangeMasterPassword}"
                                          Command="{Binding ChangeMasterPassword}"
                                          IsEnabled="{Binding IsUnlockStorage, UpdateSourceTrigger=PropertyChanged}" />
                            </MenuItem>
                            <MenuItem Header="{DynamicResource Reference}">
                                <MenuItem Header="{DynamicResource CheckUpdates}" Command="{Binding CheckUpdate}" />
                                <MenuItem Header="{DynamicResource AboutPrograms}"
                                          Command="{Binding AboutWindowCommand}" />
                            </MenuItem>
                        </Menu>

                        <Border Grid.Column="1" Panel.ZIndex="-5" MouseLeftButtonDown="Drag" MouseMove="OnMouseMove"
                                MouseLeftButtonUp="OnMouseLeftButtonUp" Background="Transparent">
                            <Border.ContextMenu>
                                <ContextMenu Foreground="{DynamicResource ForegroundWindow}">
                                    <MenuItem Header="{DynamicResource Collapse}" Click="Collapse">
                                        <MenuItem.Icon>
                                            <Image Source="{DynamicResource ImageHide}" Width="12"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem x:Name="FullMenu" Header="{DynamicResource Expand}" Click="Full">
                                        <MenuItem.Icon>
                                            <Image Source="{DynamicResource ImageExpand}" Width="12"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <Separator/>
                                    <MenuItem Header="{DynamicResource Close}" InputGestureText="Alt+F4">
                                        <MenuItem.Triggers>
                                            <EventTrigger RoutedEvent="MenuItem.Click">
                                                <BeginStoryboard>
                                                    <Storyboard Completed="Timeline_OnCompleted" Timeline.DesiredFrameRate="60" FillBehavior="Stop">
                                                        <DoubleAnimation Storyboard.TargetName="ScaleWindow" Storyboard.TargetProperty="ScaleX" From="1" To="0.8" AccelerationRatio="1" Duration="0:0:0.2"/>
                                                        <DoubleAnimation Storyboard.TargetName="ScaleWindow" Storyboard.TargetProperty="ScaleY" From="1" To="0.8" AccelerationRatio="1" Duration="0:0:0.2"/>
                                                        <DoubleAnimation Storyboard.TargetName="mainWindow" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </MenuItem.Triggers>
                                        <MenuItem.Icon>
                                            <Image Source="{DynamicResource ImageClose}" Width="12"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </Border.ContextMenu>
                        </Border>
                        <Button Grid.Column="2" Padding="7" Command="{Binding ShowSearchWindow}" Style="{DynamicResource ButtonHeight}" IsEnabled="{Binding IsUnlockStorage, UpdateSourceTrigger=PropertyChanged}">
                            <Image Source="{DynamicResource SearchImage}"/>
                        </Button>
                        <Button Grid.Column="3" Padding="13" Style="{DynamicResource ButtonHeight}" Click="Collapse">
                            <Image Source="{DynamicResource ImageHide}"/>
                        </Button>
                        <Button Grid.Column="4" Padding="8" Style="{DynamicResource ButtonHeight}" Click="Full">
                            <Image Source="{DynamicResource ImageExpand}"/>
                        </Button>
                        <Button Grid.Column="5" Padding="8" Style="{DynamicResource ButtonHeight}">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard Completed="Timeline_OnCompleted" Timeline.DesiredFrameRate="60" FillBehavior="Stop">
                                            <DoubleAnimation Storyboard.TargetName="ScaleWindow" Storyboard.TargetProperty="ScaleX" From="1" To="0.8" AccelerationRatio="1" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="ScaleWindow" Storyboard.TargetProperty="ScaleY" From="1" To="0.8" AccelerationRatio="1" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="mainWindow" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                            <Image Source="{DynamicResource ImageClose}"/>
                        </Button>
                    </Grid>
                </Border>
                <Grid Grid.Row="1">
                    <tb:TaskbarIcon Grid.Row="0" Grid.Column="0"
                                    Visibility="Visible"
                                    ToolTipText="OlibKey"
                                    IconSource="favicon.ico"
                                    MenuActivation="RightClick"
                                    DoubleClickCommand="{Binding ShowWindow}">
                        <tb:TaskbarIcon.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{DynamicResource ShowOPM}" Command="{Binding ShowWindow}" />
                                <MenuItem Header="{DynamicResource LockStorage}" Command="{Binding BlockingStorage}"
                                          IsEnabled="{Binding IsUnlockStorage, UpdateSourceTrigger=PropertyChanged}" />
                                <MenuItem Header="{DynamicResource UnlockStorage}"
                                          Command="{Binding UnblockingStorage}"
                                          IsEnabled="{Binding IsLockStorage, UpdateSourceTrigger=PropertyChanged}" />
                                <Separator />
                                <MenuItem Header="{DynamicResource ExitFrom}" Click="MenuItem_OnClick" />
                            </ContextMenu>
                        </tb:TaskbarIcon.ContextMenu>
                    </tb:TaskbarIcon>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition />
                            <RowDefinition Height="50" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0" />
                            <ColumnDefinition Width="23*" />
                            <ColumnDefinition Width="57*" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="bNotification" Opacity="0" Visibility="Collapsed" Grid.Column="2"
                                Panel.ZIndex="10" Margin="5" Width="Auto" CornerRadius="5" Background="Green"
                                HorizontalAlignment="Right">
                            <DockPanel Margin="5">
                                <Image Source="{StaticResource TickMarkDrawingImage}" Margin="0,0,15,0" />
                                <AccessText x:Name="NotText" VerticalAlignment="Center" TextWrapping="Wrap"
                                            Foreground="White" />
                            </DockPanel>
                        </Border>
                        <Image x:Name="saveIcon" Grid.Column="2" Opacity="0" Visibility="Collapsed" Panel.ZIndex="10"
                               Source="{StaticResource saveDrawingImage}" Margin="5" HorizontalAlignment="Right" />

                        
                        
                        <Frame x:Name="frame" Grid.Row="1" Grid.Column="2" Source="/Views/StartPage.xaml"
                               NavigationUIVisibility="Hidden" Grid.RowSpan="2" />
                        <ListBox x:Name="lBox" VirtualizingPanel.ScrollUnit="Pixel" BorderThickness="0 0 1 0"
                                 HorizontalContentAlignment="Stretch"
                                 ItemsSource="{Binding AccountsList, UpdateSourceTrigger=PropertyChanged}"
                                 Background="{DynamicResource BackgroundWindow}"
                                 SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged}"
                                 BorderBrush="{DynamicResource BorderColorWindow}" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" />
                        <Button Grid.Row="1" Click="MoveUpButton" Grid.Column="1" Content="↑" Margin="5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom" />
                        <Button Grid.Row="1" Click="MoveDownButton" Grid.Column="1" Content="↓" Margin="5"
                                HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                        <Border Grid.Column="1" Grid.Row="2" BorderThickness="0 1 1 0" CornerRadius="0,0,0,4.5"
                                BorderBrush="{DynamicResource BorderColorWindow}"
                                Background="{DynamicResource GlobalBorderColor}">
                            <Button Command="{Binding NewCreatePassword}" Content="{DynamicResource Add}" Margin="10"
                                    IsEnabled="{Binding IsUnlockStorage, UpdateSourceTrigger=PropertyChanged}" />
                        </Border>
                        <Label Grid.Column="2" Content="{Binding NameStorage, UpdateSourceTrigger=PropertyChanged}"
                               Foreground="{DynamicResource ForegroundWindow}"
                               FontWeight="Bold"
                               BorderBrush="{DynamicResource BorderColorWindow}"
                               BorderThickness="0 0 0 1" Background="{DynamicResource GlobalBorderColor}" FontSize="18"
                               VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
